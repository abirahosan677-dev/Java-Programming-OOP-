/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Chen En
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;

public class PPEManagementFrame extends javax.swing.JFrame {
    private DefaultListModel<String> ppeListModel;
    private JList<String> ppeList;
    private JTextField itemNameField;
    private JButton addButton, modifyButton, deleteButton;

    public PPEManagementFrame() {
        setTitle("PPE Management");
        setSize(500, 400);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout());

        ppeListModel = new DefaultListModel<>();
        loadPPEItems();
        ppeList = new JList<>(ppeListModel);
        JScrollPane scrollPane = new JScrollPane(ppeList);
        add(scrollPane, BorderLayout.CENTER);

        JPanel inputPanel = new JPanel();
        inputPanel.setLayout(new FlowLayout());
        itemNameField = new JTextField(20);
        addButton = new JButton("Add");
        modifyButton = new JButton("Modify");
        deleteButton = new JButton("Delete");

        inputPanel.add(new JLabel("Item Name: "));
        inputPanel.add(itemNameField);
        inputPanel.add(addButton);
        inputPanel.add(modifyButton);
        inputPanel.add(deleteButton);
        add(inputPanel, BorderLayout.SOUTH);

        addButton.addActionListener(e -> addItem());
        modifyButton.addActionListener(e -> modifyItem());
        deleteButton.addActionListener(e -> deleteItem());
    }

    private void loadPPEItems() {
        File file = new File("ppe.txt");
        if (file.exists()) {
            try (Scanner scanner = new Scanner(file)) {
                while (scanner.hasNextLine()) {
                    ppeListModel.addElement(scanner.nextLine());
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error loading PPE items.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void savePPEItems() {
        try (PrintWriter writer = new PrintWriter(new FileWriter("ppe.txt"))) {
            for (int i = 0; i < ppeListModel.size(); i++) {
                writer.println(ppeListModel.get(i));
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving PPE items.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void addItem() {
        String item = itemNameField.getText().trim();
        if (!item.isEmpty()) {
            ppeListModel.addElement(item);
            savePPEItems();
            itemNameField.setText("");
        }
    }

    private void modifyItem() {
        int selectedIndex = ppeList.getSelectedIndex();
        if (selectedIndex != -1) {
            String newItem = itemNameField.getText().trim();
            if (!newItem.isEmpty()) {
                ppeListModel.set(selectedIndex, newItem);
                savePPEItems();
                itemNameField.setText("");
            }
        }
    }

    private void deleteItem() {
        int selectedIndex = ppeList.getSelectedIndex();
        if (selectedIndex != -1) {
            ppeListModel.remove(selectedIndex);
            savePPEItems();
        }
    }
    /**
     * Creates new form PPEManagementFrame
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        SwingUtilities.invokeLater(() -> new PPEManagementFrame().setVisible(true));        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PPEManagementFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PPEManagementFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PPEManagementFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PPEManagementFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PPEManagementFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
